{"version":3,"file":"static/js/423.e660197c.chunk.js","mappings":"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","sources":["../node_modules/@studio-freight/lenis/src/maths.js","../node_modules/@studio-freight/lenis/src/animate.js","../node_modules/@studio-freight/lenis/src/debounce.js","../node_modules/@studio-freight/lenis/src/dimensions.js","../node_modules/@studio-freight/lenis/src/nanoevents.js","../node_modules/@studio-freight/lenis/src/virtual-scroll.js","../node_modules/@studio-freight/lenis/src/index.js","../node_modules/locomotive-scroll/src/core/IO.ts","../node_modules/locomotive-scroll/src/utils/maths.ts","../node_modules/locomotive-scroll/src/core/ScrollElement.ts","../node_modules/locomotive-scroll/src/core/Core.ts","../node_modules/locomotive-scroll/src/core/RO.ts","../node_modules/locomotive-scroll/src/index.ts"],"sourcesContent":["// Clamp a value between a minimum and maximum value\nexport function clamp(min, input, max) {\n  return Math.max(min, Math.min(input, max))\n}\n\n// Truncate a floating-point number to a specified number of decimal places\nexport function truncate(value, decimals = 0) {\n  return parseFloat(value.toFixed(decimals))\n}\n\n// Linearly interpolate between two values using an amount (0 <= amt <= 1)\nexport function lerp(start, end, amt) {\n  return (1 - amt) * start + amt * end\n}\n\n// Calculate the modulo of the dividend and divisor while keeping the result within the same sign as the divisor\nexport function clampedModulo(dividend, divisor) {\n  let remainder = dividend % divisor\n\n  // If the remainder and divisor have different signs, adjust the remainder\n  if ((divisor > 0 && remainder < 0) || (divisor < 0 && remainder > 0)) {\n    remainder += divisor\n  }\n\n  return remainder\n}\n","import { clamp, lerp } from './maths'\n\n// Animate class to handle value animations with lerping or easing\nexport class Animate {\n  // Advance the animation by the given delta time\n  advance(deltaTime) {\n    if (!this.isRunning) return\n\n    let completed = false\n\n    if (this.lerp) {\n      this.value = lerp(this.value, this.to, this.lerp)\n      if (Math.round(this.value) === this.to) {\n        this.value = this.to\n        completed = true\n      }\n    } else {\n      this.currentTime += deltaTime\n      const linearProgress = clamp(0, this.currentTime / this.duration, 1)\n\n      completed = linearProgress >= 1\n      const easedProgress = completed ? 1 : this.easing(linearProgress)\n      this.value = this.from + (this.to - this.from) * easedProgress\n    }\n\n    // Call the onUpdate callback with the current value and completed status\n    this.onUpdate?.(this.value, { completed })\n\n    if (completed) {\n      this.stop()\n    }\n  }\n\n  // Stop the animation\n  stop() {\n    this.isRunning = false\n  }\n\n  // Set up the animation from a starting value to an ending value\n  // with optional parameters for lerping, duration, easing, and onUpdate callback\n  fromTo(from, to, { lerp = 0.1, duration = 1, easing = (t) => t, onUpdate }) {\n    this.from = this.value = from\n    this.to = to\n    this.lerp = lerp\n    this.duration = duration\n    this.easing = easing\n    this.currentTime = 0\n    this.isRunning = true\n\n    this.onUpdate = onUpdate\n  }\n}\n","export function debounce(callback, delay) {\n  let timer\n  return function () {\n    let args = arguments\n    let context = this\n    clearTimeout(timer)\n    timer = setTimeout(function () {\n      callback.apply(context, args)\n    }, delay)\n  }\n}\n","import { debounce } from './debounce'\n\nexport class Dimensions {\n  constructor(wrapper, content) {\n    this.wrapper = wrapper\n    this.content = content\n\n    if (this.wrapper === window) {\n      window.addEventListener('resize', this.onWindowResize, false)\n      this.onWindowResize()\n    } else {\n      this.wrapperResizeObserver = new ResizeObserver(\n        debounce(this.onWrapperResize, 100)\n      )\n      this.wrapperResizeObserver.observe(this.wrapper)\n      this.onWrapperResize()\n    }\n\n    this.contentResizeObserver = new ResizeObserver(\n      debounce(this.onContentResize, 100)\n    )\n    this.contentResizeObserver.observe(this.content)\n    this.onContentResize()\n  }\n\n  onWindowResize = () => {\n    this.width = window.innerWidth\n    this.height = window.innerHeight\n  }\n\n  destroy() {\n    window.removeEventListener('resize', this.onWindowResize, false)\n\n    this.wrapperResizeObserver?.disconnect()\n    this.contentResizeObserver?.disconnect()\n  }\n\n  onWrapperResize = () => {\n    this.width = this.wrapper.clientWidth\n    this.height = this.wrapper.clientHeight\n  }\n\n  onContentResize = () => {\n    const element =\n      this.wrapper === window ? document.documentElement : this.wrapper\n    this.scrollHeight = element.scrollHeight\n    this.scrollWidth = element.scrollWidth\n  }\n\n  get limit() {\n    return {\n      x: this.scrollWidth - this.width,\n      y: this.scrollHeight - this.height,\n    }\n  }\n}\n","export let createNanoEvents = () => ({\n  events: {},\n\n  // Emit an event with the provided arguments\n  emit(event, ...args) {\n    let callbacks = this.events[event] || []\n    for (let i = 0, length = callbacks.length; i < length; i++) {\n      callbacks[i](...args)\n    }\n  },\n\n  // Register a callback for the specified event\n  on(event, cb) {\n    // Add the callback to the event's callback list, or create a new list with the callback\n    this.events[event]?.push(cb) || (this.events[event] = [cb])\n\n    // Return an unsubscribe function\n    return () => {\n      this.events[event] = this.events[event]?.filter((i) => cb !== i)\n    }\n  },\n})\n","import { clamp } from './maths'\nimport { createNanoEvents } from './nanoevents'\n\nexport class VirtualScroll {\n  constructor(\n    element,\n    { wheelMultiplier = 1, touchMultiplier = 2, normalizeWheel = false }\n  ) {\n    this.element = element\n    this.wheelMultiplier = wheelMultiplier\n    this.touchMultiplier = touchMultiplier\n    this.normalizeWheel = normalizeWheel\n\n    this.touchStart = {\n      x: null,\n      y: null,\n    }\n\n    this.emitter = createNanoEvents()\n\n    this.element.addEventListener('wheel', this.onWheel, { passive: false })\n    this.element.addEventListener('touchstart', this.onTouchStart, {\n      passive: false,\n    })\n    this.element.addEventListener('touchmove', this.onTouchMove, {\n      passive: false,\n    })\n    this.element.addEventListener('touchend', this.onTouchEnd, {\n      passive: false,\n    })\n  }\n\n  // Add an event listener for the given event and callback\n  on(event, callback) {\n    return this.emitter.on(event, callback)\n  }\n\n  // Remove all event listeners and clean up\n  destroy() {\n    this.emitter.events = {}\n\n    this.element.removeEventListener('wheel', this.onWheel, {\n      passive: false,\n    })\n    this.element.removeEventListener('touchstart', this.onTouchStart, {\n      passive: false,\n    })\n    this.element.removeEventListener('touchmove', this.onTouchMove, {\n      passive: false,\n    })\n    this.element.removeEventListener('touchend', this.onTouchEnd, {\n      passive: false,\n    })\n  }\n\n  // Event handler for 'touchstart' event\n  onTouchStart = (event) => {\n    const { clientX, clientY } = event.targetTouches\n      ? event.targetTouches[0]\n      : event\n\n    this.touchStart.x = clientX\n    this.touchStart.y = clientY\n\n    this.lastDelta = {\n      x: 0,\n      y: 0,\n    }\n  }\n\n  // Event handler for 'touchmove' event\n  onTouchMove = (event) => {\n    const { clientX, clientY } = event.targetTouches\n      ? event.targetTouches[0]\n      : event\n\n    const deltaX = -(clientX - this.touchStart.x) * this.touchMultiplier\n    const deltaY = -(clientY - this.touchStart.y) * this.touchMultiplier\n\n    this.touchStart.x = clientX\n    this.touchStart.y = clientY\n\n    this.lastDelta = {\n      x: deltaX,\n      y: deltaY,\n    }\n\n    this.emitter.emit('scroll', {\n      type: 'touch',\n      deltaX,\n      deltaY,\n      event,\n    })\n  }\n\n  onTouchEnd = (event) => {\n    this.emitter.emit('scroll', {\n      type: 'touch',\n      inertia: true,\n      deltaX: this.lastDelta.x,\n      deltaY: this.lastDelta.y,\n      event,\n    })\n  }\n\n  // Event handler for 'wheel' event\n  onWheel = (event) => {\n    let { deltaX, deltaY } = event\n\n    if (this.normalizeWheel) {\n      deltaX = clamp(-100, deltaX, 100)\n      deltaY = clamp(-100, deltaY, 100)\n    }\n\n    deltaX *= this.wheelMultiplier\n    deltaY *= this.wheelMultiplier\n\n    this.emitter.emit('scroll', { type: 'wheel', deltaX, deltaY, event })\n  }\n}\n","import { version } from '../package.json'\nimport { Animate } from './animate'\nimport { Dimensions } from './dimensions'\nimport { clamp, clampedModulo } from './maths'\nimport { createNanoEvents } from './nanoevents'\nimport { VirtualScroll } from './virtual-scroll'\n\n// Technical explaination\n// - listen to 'wheel' events\n// - prevent 'wheel' event to prevent scroll\n// - normalize wheel delta\n// - add delta to targetScroll\n// - animate scroll to targetScroll (smooth context)\n// - if animation is not running, listen to 'scroll' events (native context)\n\nexport default class Lenis {\n  // isScrolling = true when scroll is animating\n  // isStopped = true if user should not be able to scroll - enable/disable programatically\n  // isSmooth = true if scroll should be animated\n  // isLocked = same as isStopped but enabled/disabled when scroll reaches target\n\n  /**\n   * @typedef {(t: number) => number} EasingFunction\n   * @typedef {'vertical' | 'horizontal'} Orientation\n   * @typedef {'vertical' | 'horizontal' | 'both'} GestureOrientation\n   *\n   * @typedef LenisOptions\n   * @property {Orientation} [direction]\n   * @property {GestureOrientation} [gestureDirection]\n   * @property {number} [mouseMultiplier]\n   * @property {boolean} [smooth]\n   *\n   * @property {Window | HTMLElement} [wrapper]\n   * @property {HTMLElement} [content]\n   * @property {Window | HTMLElement} [wheelEventsTarget]\n   * @property {boolean} [smoothWheel]\n   * @property {boolean} [smoothTouch]\n   * @property {boolean} [syncTouch]\n   * @property {number} [syncTouchLerp]\n   * @property {number} [touchInertiaMultiplier]\n   * @property {number} [duration]\n   * @property {EasingFunction} [easing]\n   * @property {number} [lerp]\n   * @property {boolean} [infinite]\n   * @property {Orientation} [orientation]\n   * @property {GestureOrientation} [gestureOrientation]\n   * @property {number} [touchMultiplier]\n   * @property {number} [wheelMultiplier]\n   * @property {boolean} [normalizeWheel]\n   *\n   * @param {LenisOptions}\n   */\n  constructor({\n    //--legacy options--//\n    direction,\n    gestureDirection,\n    mouseMultiplier,\n    smooth,\n    //--legacy options--//\n    wrapper = window,\n    content = document.documentElement,\n    wheelEventsTarget = wrapper,\n    smoothWheel = smooth ?? true,\n    smoothTouch = false,\n    syncTouch = false,\n    syncTouchLerp = 0.1,\n    touchInertiaMultiplier = 35,\n    duration, // in seconds\n    easing = (t) => Math.min(1, 1.001 - Math.pow(2, -10 * t)),\n    lerp = duration ? null : 0.1,\n    infinite = false,\n    orientation = direction ?? 'vertical', // vertical, horizontal\n    gestureOrientation = gestureDirection ?? 'vertical', // vertical, horizontal, both\n    touchMultiplier = 1,\n    wheelMultiplier = mouseMultiplier ?? 1,\n    normalizeWheel = false,\n  } = {}) {\n    // warn about legacy options\n    if (direction) {\n      console.warn(\n        'Lenis: `direction` option is deprecated, use `orientation` instead'\n      )\n    }\n    if (gestureDirection) {\n      console.warn(\n        'Lenis: `gestureDirection` option is deprecated, use `gestureOrientation` instead'\n      )\n    }\n    if (mouseMultiplier) {\n      console.warn(\n        'Lenis: `mouseMultiplier` option is deprecated, use `wheelMultiplier` instead'\n      )\n    }\n    if (smooth) {\n      console.warn(\n        'Lenis: `smooth` option is deprecated, use `smoothWheel` instead'\n      )\n    }\n\n    window.lenisVersion = version\n\n    // if wrapper is html or body, fallback to window\n    if (wrapper === document.documentElement || wrapper === document.body) {\n      wrapper = window\n    }\n\n    this.options = {\n      wrapper,\n      content,\n      wheelEventsTarget,\n      smoothWheel,\n      smoothTouch,\n      syncTouch,\n      syncTouchLerp,\n      touchInertiaMultiplier,\n      duration,\n      easing,\n      lerp,\n      infinite,\n      gestureOrientation,\n      orientation,\n      touchMultiplier,\n      wheelMultiplier,\n      normalizeWheel,\n    }\n\n    this.dimensions = new Dimensions(wrapper, content)\n    this.rootElement.classList.add('lenis')\n\n    this.velocity = 0\n    this.isStopped = false\n    this.isSmooth = smoothWheel || smoothTouch\n    this.isScrolling = false\n    this.targetScroll = this.animatedScroll = this.actualScroll\n    this.animate = new Animate()\n    this.emitter = createNanoEvents()\n\n    this.options.wrapper.addEventListener('scroll', this.onScroll, {\n      passive: false,\n    })\n\n    this.virtualScroll = new VirtualScroll(wheelEventsTarget, {\n      touchMultiplier,\n      wheelMultiplier,\n      normalizeWheel,\n    })\n    this.virtualScroll.on('scroll', this.onVirtualScroll)\n  }\n\n  destroy() {\n    this.emitter.events = {}\n\n    this.options.wrapper.removeEventListener('scroll', this.onScroll, {\n      passive: false,\n    })\n\n    this.virtualScroll.destroy()\n  }\n\n  on(event, callback) {\n    return this.emitter.on(event, callback)\n  }\n\n  off(event, callback) {\n    this.emitter.events[event] = this.emitter.events[event]?.filter(\n      (i) => callback !== i\n    )\n  }\n\n  setScroll(scroll) {\n    // apply scroll value immediately\n    if (this.isHorizontal) {\n      this.rootElement.scrollLeft = scroll\n    } else {\n      this.rootElement.scrollTop = scroll\n    }\n  }\n\n  onVirtualScroll = ({ type, inertia, deltaX, deltaY, event }) => {\n    // keep zoom feature\n    if (event.ctrlKey) return\n\n    const isTouch = type === 'touch'\n    const isWheel = type === 'wheel'\n\n    if (\n      (this.options.gestureOrientation === 'vertical' && deltaY === 0) || // trackpad previous/next page gesture\n      (this.options.gestureOrientation === 'horizontal' && deltaX === 0) ||\n      (isTouch &&\n        this.options.gestureOrientation === 'vertical' &&\n        this.scroll === 0 &&\n        !this.options.infinite &&\n        deltaY <= 0) // touch pull to refresh\n    )\n      return\n\n    // catch if scrolling on nested scroll elements\n    if (\n      !!event\n        .composedPath()\n        .find((node) => node?.hasAttribute?.('data-lenis-prevent'))\n    )\n      return\n\n    if (this.isStopped || this.isLocked) {\n      event.preventDefault()\n      return\n    }\n\n    this.isSmooth =\n      ((this.options.smoothTouch || this.options.syncTouch) && isTouch) ||\n      (this.options.smoothWheel && isWheel)\n\n    if (!this.isSmooth) {\n      this.isScrolling = false\n      this.animate.stop()\n      return\n    }\n\n    event.preventDefault()\n\n    let delta = deltaY\n    if (this.options.gestureOrientation === 'both') {\n      delta = Math.abs(deltaY) > Math.abs(deltaX) ? deltaY : deltaX\n    } else if (this.options.gestureOrientation === 'horizontal') {\n      delta = deltaX\n    }\n\n    const syncTouch = isTouch && this.options.syncTouch\n    const hasTouchInertia = isTouch && inertia && Math.abs(delta) > 1\n    if (hasTouchInertia) {\n      delta = this.velocity * this.options.touchInertiaMultiplier\n    }\n\n    this.scrollTo(this.targetScroll + delta, {\n      programmatic: false,\n      ...(syncTouch && {\n        lerp: hasTouchInertia ? this.syncTouchLerp : 0.4, // should be 1 but had to leave 0.4 for iOS.....\n      }),\n    })\n  }\n\n  emit() {\n    this.emitter.emit('scroll', this)\n  }\n\n  onScroll = () => {\n    if (!this.isScrolling) {\n      const lastScroll = this.animatedScroll\n      this.animatedScroll = this.targetScroll = this.actualScroll\n      this.velocity = 0\n      this.direction = Math.sign(this.animatedScroll - lastScroll)\n      this.emit()\n    }\n  }\n\n  reset() {\n    this.isLocked = false\n    this.isScrolling = false\n    this.velocity = 0\n    this.animate.stop()\n  }\n\n  start() {\n    this.isStopped = false\n\n    this.reset()\n  }\n\n  stop() {\n    this.isStopped = true\n    this.animate.stop()\n\n    this.reset()\n  }\n\n  raf(time) {\n    const deltaTime = time - (this.time || time)\n    this.time = time\n\n    this.animate.advance(deltaTime * 0.001)\n  }\n\n  scrollTo(\n    target,\n    {\n      offset = 0,\n      immediate = false,\n      lock = false,\n      duration = this.options.duration,\n      easing = this.options.easing,\n      lerp = !duration && this.options.lerp,\n      onComplete = null,\n      force = false, // scroll even if stopped\n      programmatic = true, // called from outside of the class\n    } = {}\n  ) {\n    if (this.isStopped && !force) return\n\n    // keywords\n    if (['top', 'left', 'start'].includes(target)) {\n      target = 0\n    } else if (['bottom', 'right', 'end'].includes(target)) {\n      target = this.limit\n    } else {\n      let node\n\n      if (typeof target === 'string') {\n        // CSS selector\n        node = document.querySelector(target)\n      } else if (target?.nodeType) {\n        // Node element\n        node = target\n      }\n\n      if (node) {\n        if (this.options.wrapper !== window) {\n          // nested scroll offset correction\n          const wrapperRect = this.options.wrapper.getBoundingClientRect()\n          offset -= this.isHorizontal ? wrapperRect.left : wrapperRect.top\n        }\n\n        const rect = node.getBoundingClientRect()\n\n        target =\n          (this.isHorizontal ? rect.left : rect.top) + this.animatedScroll\n      }\n    }\n\n    if (typeof target !== 'number') return\n\n    target += offset\n    target = Math.round(target)\n\n    if (this.options.infinite) {\n      if (programmatic) {\n        this.targetScroll = this.animatedScroll = this.scroll\n      }\n    } else {\n      target = clamp(0, target, this.limit)\n    }\n\n    if (immediate) {\n      this.animatedScroll = this.targetScroll = target\n      this.setScroll(this.scroll)\n      this.reset()\n      this.emit()\n      onComplete?.()\n      return\n    }\n\n    if (!programmatic) {\n      if (target === this.targetScroll) return\n\n      this.targetScroll = target\n    }\n\n    this.animate.fromTo(this.animatedScroll, target, {\n      duration,\n      easing,\n      lerp,\n      onUpdate: (value, { completed }) => {\n        // started\n        if (lock) this.isLocked = true\n        this.isScrolling = true\n\n        // updated\n        this.velocity = value - this.animatedScroll\n        this.direction = Math.sign(this.velocity)\n\n        this.animatedScroll = value\n        this.setScroll(this.scroll)\n\n        if (programmatic) {\n          // wheel during programmatic should stop it\n          this.targetScroll = value\n        }\n\n        // completed\n        if (completed) {\n          if (lock) this.isLocked = false\n          requestAnimationFrame(() => {\n            //avoid double scroll event\n            this.isScrolling = false\n          })\n          this.velocity = 0\n          onComplete?.()\n        }\n\n        this.emit()\n      },\n    })\n  }\n\n  get rootElement() {\n    return this.options.wrapper === window\n      ? this.options.content\n      : this.options.wrapper\n  }\n\n  get limit() {\n    return this.isHorizontal ? this.dimensions.limit.x : this.dimensions.limit.y\n  }\n\n  get isHorizontal() {\n    return this.options.orientation === 'horizontal'\n  }\n\n  get actualScroll() {\n    // value browser takes into account\n    return this.isHorizontal\n      ? this.rootElement.scrollLeft\n      : this.rootElement.scrollTop\n  }\n\n  get scroll() {\n    return this.options.infinite\n      ? clampedModulo(this.animatedScroll, this.limit)\n      : this.animatedScroll\n  }\n\n  get progress() {\n    // avoid progress to be NaN\n    return this.limit === 0 ? 1 : this.scroll / this.limit\n  }\n\n  get isSmooth() {\n    return this.__isSmooth\n  }\n\n  set isSmooth(value) {\n    if (this.__isSmooth !== value) {\n      this.rootElement.classList.toggle('lenis-smooth', value)\n      this.__isSmooth = value\n    }\n  }\n\n  get isScrolling() {\n    return this.__isScrolling\n  }\n\n  set isScrolling(value) {\n    if (this.__isScrolling !== value) {\n      this.rootElement.classList.toggle('lenis-scrolling', value)\n      this.__isScrolling = value\n    }\n  }\n\n  get isStopped() {\n    return this.__isStopped\n  }\n\n  set isStopped(value) {\n    if (this.__isStopped !== value) {\n      this.rootElement.classList.toggle('lenis-stopped', value)\n      this.__isStopped = value\n    }\n  }\n}\n","/**\n * Intersection Observer\n *\n * Detecting visibility of an element in the viewport.\n *\n * Features functions to:\n *\n * - Trigger inview/outOfView callbacks\n * - If the element has a requestAnimationFrame dependency, set interactivy status for the ScrollElement Class\n *\n * References:\n *\n * - {@link https://developer.mozilla.org/en-US/docs/Web/API/Intersection_Observer_API}\n */\n\nimport { IIOOptions } from '../types';\nimport ScrollElement from './ScrollElement';\n\nexport default class IO {\n    public scrollElements: ScrollElement[];\n    private rootMargin: string;\n    private IORaf: boolean;\n    private observer!: IntersectionObserver;\n\n    constructor({\n        scrollElements,\n        rootMargin = '-1px -1px -1px -1px',\n        IORaf,\n    }: IIOOptions) {\n        // Parameters\n        this.scrollElements = scrollElements;\n        this.rootMargin = rootMargin;\n        this.IORaf = IORaf;\n\n        // Init\n        this._init();\n    }\n\n    /**\n     * Lifecyle - Initialize Intersection Observer.\n     *\n     * @private\n     */\n    private _init() {\n        // Options\n        const observerOptions = {\n            rootMargin: this.rootMargin,\n        };\n\n        // Callback\n        const onIntersect = (entries: IntersectionObserverEntry[]) => {\n            entries.forEach((entry) => {\n                const $targetItem: ScrollElement | undefined =\n                    this.scrollElements.find(\n                        (item) => item.$el === entry.target\n                    );\n\n                if (entry.isIntersecting) {\n                    $targetItem && ($targetItem.isAlreadyIntersected = true);\n                    this._setInview(entry);\n                } else if ($targetItem && $targetItem.isAlreadyIntersected) {\n                    this._setOutOfView(entry);\n                }\n            });\n        };\n\n        // Instance\n        this.observer = new IntersectionObserver(onIntersect, observerOptions);\n\n        // Observe each default elements\n        for (const scrollElement of this.scrollElements) {\n            const $scrollElement = scrollElement.$el;\n            this.observe($scrollElement);\n        }\n    }\n\n    /**\n     * Lifecyle - Destroy Intersection Observer.\n     */\n    public destroy() {\n        this.observer.disconnect();\n    }\n\n    /**\n     * Subscribe element to the Intersection Observer.\n     *\n     * @param {HTMLElement} $scrollElement - DOM Element to observe.\n     */\n    public observe($scrollElement: HTMLElement) {\n        if (!$scrollElement) {\n            return;\n        }\n\n        this.observer.observe($scrollElement);\n    }\n\n    /**\n     * Unsubscribe element to the Intersection Observer.\n     *\n     * @param {HTMLElement} $scrollElement - DOM Element to unobserve.\n     */\n    public unobserve($scrollElement: HTMLElement) {\n        if (!$scrollElement) {\n            return;\n        }\n\n        this.observer.unobserve($scrollElement);\n    }\n\n    /**\n     * Find ScrollElementReference instance and trigger inview callbacks.\n     *\n     * @private\n     *\n     * @param {IntersectionObserverEntry} entry - DOM Element to observe.\n     */\n    private _setInview(entry: IntersectionObserverEntry) {\n        const scrollElement = this.scrollElements.find(\n            (scrollElement) => scrollElement.$el === entry.target\n        );\n\n        this.IORaf && scrollElement?.setInteractivityOn();\n        !this.IORaf && scrollElement?.setInview();\n    }\n\n    /**\n     * Find ScrollElementReference instance and trigger out of view callbacks.\n     *\n     * @private\n     *\n     * @param {IntersectionObserverEntry} entry - DOM Element to observe.\n     */\n    private _setOutOfView(entry: IntersectionObserverEntry) {\n        const scrollElement = this.scrollElements.find(\n            (scrollElement) => scrollElement.$el === entry.target\n        );\n\n        this.IORaf && scrollElement?.setInteractivityOff();\n        !this.IORaf && scrollElement?.setOutOfView();\n\n        // Unobserve if element doesn't have repeat attribute\n        if (!scrollElement?.attributes.scrollRepeat && !this.IORaf) {\n            this.unobserve(entry.target as HTMLElement);\n        }\n    }\n}\n","// https://greensock.com/docs/v3/GSAP/gsap.utils\n\n/**\n * Clamp a value to fit within a specific range (ex: clamp(0, 100, -12) --> 0).\n *\n * @param {number} min   - Minimum value expected.\n * @param {number} max   - Maximum value expected.\n * @param {number} value - Current value.\n *\n * @returns {number} - Clamped value.\n */\nexport function clamp(min: number, max: number, value: number): number {\n    return value < min ? min : value > max ? max : value;\n}\n\n/**\n * Map one range to another (ex: mapRange(-10, 10, 0, 100, 5) --> 75).\n *\n * @param {number} inMin  - Current minimum value.\n * @param {number} inMax  - Current maximum value.\n * @param {number} outMin - Maximum value expected.\n * @param {number} outMax - Maximum value expected.\n * @param {number} value  - Current value.\n *\n * @returns {number} - New value that should be between minimum value expected and maximum value.\n */\nexport function mapRange(\n    inMin: number,\n    inMax: number,\n    outMin: number,\n    outMax: number,\n    value: number\n): number {\n    const inRange = inMax - inMin;\n    const outRange = outMax - outMin;\n    return outMin + (((value - inMin) / inRange) * outRange || 0);\n}\n\n/**\n * Map a number within a range to a progress between 0 to 1 (ex: normalize(100, 200, 150) --> 0.5).\n *\n * @param {number} min   - Current minimum value.\n * @param {number} max   - Current maximum value.\n * @param {number} value - Current value.\n *\n * @returns {number} - New value that should be between 0 and 1.\n */\nexport function normalize(min: number, max: number, value: number): number {\n    return mapRange(min, max, 0, 1, value);\n}\n\n/**\n * Get closest number from an array.\n *\n * @param {number[]} array  - Numbers array.\n * @param {number}   target - Reference value.\n *\n * @returns {number} - Closest number.\n */\nexport function closestNumber(array: number[], target: number): number {\n    return array.reduce((prev, curr) => {\n        return Math.abs(curr - target) < Math.abs(prev - target) ? curr : prev;\n    });\n}\n","/**\n * Scroll Element\n *\n * Give tools to compute element progress in the viewport and triggers callbacks to animate it.\n *\n * Features functions to:\n *\n * - scrollClass - Add a custom class when the element is intersected by the offset\n * - scrollOffset - Determine offsets to intersect the element\n * - scrollPosition - Determine the element positions to consider an element as intersected.\n * - scrollModuleProgress - Send scroll progress to modular module that have a specific method (PROGRESS_MODULAR_METHOD)\n * - scrollCssProgress - Add a specific css variable (PROGRESS_CSS_VAR) that store the scroll progress\n * - scrollEventProgress - Send scroll progress to custom event listeners.\n * - scrollSpeed - Add a scroll multiplicator to create a parallax effect\n * - scrollRepeat - Repeat the option to trigger animation each time the element is intersected\n * - scrollCall - Call a custom event or a modular callback when the element is intersected\n */\n\nimport {\n    IModular,\n    IScrollElementOptions,\n    IScrollElementAttributes,\n    IScrollElementIntersection,\n    IScrollElementMetrics,\n    IProgressModularModules,\n    IScrollElementCallbacksValues,\n    scrollCallWay,\n    scrollCallFrom,\n    scrollOrientation,\n} from '../types';\nimport { clamp, closestNumber, normalize, mapRange } from '../utils/maths';\n\n/** Constants */\nconst INVIEW_CLASS = 'is-inview';\nconst PROGRESS_CSS_VAR = '--progress';\nconst PROGRESS_MODULAR_METHOD = 'onScrollProgress';\n\nexport default class ScrollElement {\n    public $el: HTMLElement;\n    public id: number;\n    public needRaf: boolean;\n    public attributes: IScrollElementAttributes;\n    public scrollOrientation: scrollOrientation;\n    public isAlreadyIntersected: boolean;\n\n    private intersection: IScrollElementIntersection;\n    private metrics: IScrollElementMetrics;\n    private currentScroll: number;\n    private translateValue: number;\n    private progress: number;\n    private lastProgress: number | null;\n    private modularInstance?: IModular;\n    private progressModularModules: IProgressModularModules[];\n    private isInview: boolean;\n    private isInteractive: boolean;\n    private isInFold: boolean;\n    private isFirstResize: boolean;\n\n    private subscribeElementUpdateFn: (scrollElement: ScrollElement) => void;\n    private unsubscribeElementUpdateFn: (scrollElement: ScrollElement) => void;\n\n    constructor({\n        $el,\n        id,\n        modularInstance,\n        subscribeElementUpdateFn,\n        unsubscribeElementUpdateFn,\n        needRaf,\n        scrollOrientation,\n    }: IScrollElementOptions) {\n        // Scroll DOM element\n        this.$el = $el;\n        // Unique ID\n        this.id = id;\n        // RAF option\n        this.needRaf = needRaf;\n        // Scroll Direction\n        this.scrollOrientation = scrollOrientation;\n        // Modular.js\n        this.modularInstance = modularInstance;\n        // Parent's callbacks\n        this.subscribeElementUpdateFn = subscribeElementUpdateFn;\n        this.unsubscribeElementUpdateFn = unsubscribeElementUpdateFn;\n\n        // Attributes\n        this.attributes = {\n            scrollClass: this.$el.dataset['scrollClass'] ?? INVIEW_CLASS,\n            scrollOffset: this.$el.dataset['scrollOffset'] ?? '0,0',\n            scrollPosition: this.$el.dataset['scrollPosition'] ?? 'start,end',\n            scrollModuleProgress:\n                this.$el.dataset['scrollModuleProgress'] != null,\n            scrollCssProgress: this.$el.dataset['scrollCssProgress'] != null,\n            scrollEventProgress:\n                this.$el.dataset['scrollEventProgress'] ?? null,\n            scrollSpeed:\n                this.$el.dataset['scrollSpeed'] != null\n                    ? parseFloat(this.$el.dataset['scrollSpeed'])\n                    : null,\n            scrollRepeat: this.$el.dataset['scrollRepeat'] != null,\n            scrollCall: this.$el.dataset['scrollCall'] ?? null,\n            scrollCallSelf: this.$el.dataset['scrollCallSelf'] != null,\n            scrollIgnoreFold: this.$el.dataset['scrollIgnoreFold'] != null,\n            scrollEnableTouchSpeed:\n                this.$el.dataset['scrollEnableTouchSpeed'] != null,\n        };\n\n        // Limits\n        this.intersection = {\n            start: 0,\n            end: 0,\n        };\n\n        // Metrics\n        this.metrics = {\n            offsetStart: 0,\n            offsetEnd: 0,\n            bcr: {} as DOMRect,\n        };\n\n        // Scroll Values\n        this.currentScroll =\n            this.scrollOrientation === 'vertical'\n                ? window.scrollY\n                : window.scrollX;\n\n        // Parallax\n        this.translateValue = 0;\n\n        // Progress\n        this.progress = 0;\n        this.lastProgress = null;\n        this.progressModularModules = [];\n\n        // Inview\n        this.isInview = false;\n        this.isInteractive = false;\n        this.isAlreadyIntersected = false;\n        this.isInFold = false;\n        this.isFirstResize = true;\n\n        // Init\n        this._init();\n    }\n\n    /**\n     * Lifecyle - Initialize progress tracking.\n     *\n     * @private\n     */\n    private _init() {\n        if (!this.needRaf) {\n            return;\n        }\n\n        // Prepare modules progress\n        if (this.modularInstance && this.attributes.scrollModuleProgress) {\n            this._getProgressModularModules();\n        }\n\n        // First resize to compute all values\n        this._resize();\n    }\n\n    /**\n     * Callback - Resize callback\n     */\n    public onResize({ currentScroll }: IScrollElementCallbacksValues) {\n        this.currentScroll = currentScroll;\n        this._resize();\n    }\n\n    /**\n     * Callback - RAF callback\n     */\n    public onRender({ currentScroll, smooth }: IScrollElementCallbacksValues) {\n        const wSize =\n            this.scrollOrientation === 'vertical'\n                ? window.innerHeight\n                : window.innerWidth;\n        this.currentScroll = currentScroll;\n        this._computeProgress();\n\n        // Parallax\n        if (\n            this.attributes.scrollSpeed &&\n            !isNaN(this.attributes.scrollSpeed)\n        ) {\n            // if touch detected or smooth disabled\n            if (!this.attributes.scrollEnableTouchSpeed && !smooth) {\n                if (this.translateValue) {\n                    this.$el.style.transform = `translate3d(0, 0, 0)`;\n                }\n                this.translateValue = 0;\n\n                // if mousewheel or smooth enabled\n            } else {\n                // Check fold condition\n                if (this.isInFold) {\n                    const progress = Math.max(0, this.progress);\n                    this.translateValue =\n                        progress * wSize * this.attributes.scrollSpeed * -1;\n                } else {\n                    const progress = mapRange(0, 1, -1, 1, this.progress);\n                    this.translateValue =\n                        progress * wSize * this.attributes.scrollSpeed * -1;\n                }\n\n                this.$el.style.transform =\n                    this.scrollOrientation === 'vertical'\n                        ? `translate3d(0, ${this.translateValue}px, 0)`\n                        : `translate3d(${this.translateValue}px, 0, 0)`;\n            }\n        }\n    }\n\n    /**\n     * Inview callback\n     */\n    public setInview() {\n        if (this.isInview) {\n            return;\n        }\n\n        this.isInview = true;\n        this.$el.classList.add(this.attributes.scrollClass);\n\n        const way: scrollCallWay = 'enter';\n        const from: scrollCallFrom = this._getScrollCallFrom();\n        this.attributes.scrollCall && this._dispatchCall(way, from);\n    }\n\n    /**\n     * Out of view callback\n     */\n    public setOutOfView() {\n        if (!(this.isInview && this.attributes.scrollRepeat)) {\n            return;\n        }\n\n        this.isInview = false;\n        this.$el.classList.remove(this.attributes.scrollClass);\n\n        const way: scrollCallWay = 'leave';\n        const from: scrollCallFrom = this._getScrollCallFrom();\n        this.attributes.scrollCall && this._dispatchCall(way, from);\n    }\n\n    /**\n     * Switch interactivity on to subscribe the instance to the RAF\n     * and start calculations.\n     */\n    public setInteractivityOn() {\n        if (this.isInteractive) {\n            return;\n        }\n\n        this.isInteractive = true;\n        this.subscribeElementUpdateFn(this);\n    }\n\n    /**\n     * Switch interactivity off to unsubscribe the instance to the RAF\n     * and stop calculations.\n     */\n    public setInteractivityOff() {\n        if (!this.isInteractive) {\n            return;\n        }\n\n        this.isInteractive = false;\n        this.unsubscribeElementUpdateFn(this);\n\n        // Force progress to progress limit when the element is out\n        this.lastProgress != null &&\n            this._computeProgress(closestNumber([0, 1], this.lastProgress));\n    }\n\n    /**\n     * Resize method that compute the element's values.\n     *\n     * @private\n     */\n    private _resize() {\n        this.metrics.bcr = this.$el.getBoundingClientRect();\n        this._computeMetrics();\n        this._computeIntersection();\n\n        // First resize logic\n        if (this.isFirstResize) {\n            this.isFirstResize = false;\n            // Dispatch default call if the element is in fold.\n            if (this.isInFold) {\n                this.setInview();\n            }\n        }\n    }\n\n    /**\n     * Compute element's offsets and determine if the element is in fold.\n     *\n     * @private\n     */\n    private _computeMetrics() {\n        const { top, left, height, width } = this.metrics.bcr;\n        const wSize =\n            this.scrollOrientation === 'vertical'\n                ? window.innerHeight\n                : window.innerWidth;\n        const metricsStart = this.scrollOrientation === 'vertical' ? top : left;\n        const metricsSize =\n            this.scrollOrientation === 'vertical' ? height : width;\n\n        this.metrics.offsetStart =\n            this.currentScroll + metricsStart - this.translateValue;\n        this.metrics.offsetEnd = this.metrics.offsetStart + metricsSize;\n\n        if (\n            this.metrics.offsetStart < wSize &&\n            !this.attributes.scrollIgnoreFold\n        ) {\n            this.isInFold = true;\n        } else {\n            this.isInFold = false;\n        }\n    }\n\n    /**\n     * Compute intersection values depending on the context.\n     *\n     * @private\n     */\n    private _computeIntersection() {\n        // Window size\n        const wSize =\n            this.scrollOrientation === 'vertical'\n                ? window.innerHeight\n                : window.innerWidth;\n\n        // Metrics size\n        const metricsSize =\n            this.scrollOrientation === 'vertical'\n                ? this.metrics.bcr.height\n                : this.metrics.bcr.width;\n\n        // Offset\n        const offset = this.attributes.scrollOffset.split(',');\n        const offsetStart = offset[0] != undefined ? offset[0].trim() : '0';\n        const offsetEnd = offset[1] != undefined ? offset[1].trim() : '0';\n\n        // Positions\n        const scrollPosition = this.attributes.scrollPosition.split(',');\n        let scrollPositionStart =\n            scrollPosition[0] != undefined ? scrollPosition[0].trim() : 'start';\n        const scrollPositionEnd =\n            scrollPosition[1] != undefined ? scrollPosition[1].trim() : 'end';\n\n        // Viewport\n        const viewportStart = offsetStart.includes('%')\n            ? wSize * parseInt(offsetStart.replace('%', '').trim()) * 0.01\n            : parseInt(offsetStart);\n        const viewportEnd = offsetEnd.includes('%')\n            ? wSize * parseInt(offsetEnd.replace('%', '').trim()) * 0.01\n            : parseInt(offsetEnd);\n\n        // Fold exception\n        if (this.isInFold) {\n            scrollPositionStart = 'fold';\n        }\n\n        // Define Intersection Start\n        switch (scrollPositionStart) {\n            case 'start':\n                this.intersection.start =\n                    this.metrics.offsetStart - wSize + viewportStart;\n                break;\n\n            case 'middle':\n                this.intersection.start =\n                    this.metrics.offsetStart -\n                    wSize +\n                    viewportStart +\n                    metricsSize * 0.5;\n                break;\n\n            case 'end':\n                this.intersection.start =\n                    this.metrics.offsetStart -\n                    wSize +\n                    viewportStart +\n                    metricsSize;\n                break;\n\n            case 'fold':\n                this.intersection.start = 0;\n                break;\n\n            default:\n                this.intersection.start =\n                    this.metrics.offsetStart - wSize + viewportStart;\n                break;\n        }\n\n        // Define Intersection End\n        switch (scrollPositionEnd) {\n            case 'start':\n                this.intersection.end = this.metrics.offsetStart - viewportEnd;\n                break;\n\n            case 'middle':\n                this.intersection.end =\n                    this.metrics.offsetStart - viewportEnd + metricsSize * 0.5;\n                break;\n\n            case 'end':\n                this.intersection.end =\n                    this.metrics.offsetStart - viewportEnd + metricsSize;\n                break;\n\n            default:\n                this.intersection.end =\n                    this.metrics.offsetStart - viewportEnd + metricsSize;\n                break;\n        }\n\n        // Avoid to have the end < the start intersection >\n        if (this.intersection.end <= this.intersection.start) {\n            switch (scrollPositionEnd) {\n                case 'start':\n                    this.intersection.end = this.intersection.start + 1;\n                    break;\n\n                case 'middle':\n                    this.intersection.end =\n                        this.intersection.start + metricsSize * 0.5;\n                    break;\n\n                case 'end':\n                    this.intersection.end =\n                        this.intersection.start + metricsSize;\n                    break;\n\n                default:\n                    this.intersection.end = this.intersection.start + 1;\n                    break;\n            }\n        }\n    }\n\n    /**\n     * Compute the scroll progress of the element depending\n     * on its intersection values.\n     *\n     * @private\n     *\n     * @param {number} [forcedProgress] - Value to force progress.\n     */\n    private _computeProgress(forcedProgress?: number) {\n        // Progress\n        const progress =\n            forcedProgress ??\n            clamp(\n                0,\n                1,\n                normalize(\n                    this.intersection.start,\n                    this.intersection.end,\n                    this.currentScroll\n                )\n            );\n\n        this.progress = progress;\n\n        if (progress != this.lastProgress) {\n            this.lastProgress = progress;\n\n            // Set the element's progress to the css variable\n            this.attributes.scrollCssProgress && this._setCssProgress(progress);\n\n            // Set the element's progress to the custom event listeners\n            this.attributes.scrollEventProgress &&\n                this._setCustomEventProgress(progress);\n\n            // Set the element's progress to inline modules\n            if (this.attributes.scrollModuleProgress) {\n                for (const modularModules of this.progressModularModules) {\n                    this.modularInstance &&\n                        this.modularInstance.call(\n                            PROGRESS_MODULAR_METHOD,\n                            progress,\n                            modularModules.moduleName,\n                            modularModules.moduleId\n                        );\n                }\n            }\n\n            // Logic to trigger the inview/out of view callbacks\n            progress > 0 && progress < 1 && this.setInview();\n            progress === 0 && this.setOutOfView();\n            progress === 1 && this.setOutOfView();\n        }\n    }\n\n    /**\n     * Set the element's progress to a specific css variable.\n     *\n     * @private\n     *\n     * @param {number} [currentProgress] - Progress value.\n     */\n    _setCssProgress(currentProgress = 0) {\n        this.$el.style.setProperty(\n            PROGRESS_CSS_VAR,\n            currentProgress.toString()\n        );\n    }\n\n    /**\n     * Set the element's progress to the custom event listeners.\n     *\n     * @private\n     *\n     * @param {number} [currentProgress] - Progress value.\n     */\n    _setCustomEventProgress(currentProgress = 0) {\n        const customEventName = this.attributes.scrollEventProgress;\n\n        if (!customEventName) return;\n\n        const customEvent = new CustomEvent(customEventName, {\n            detail: {\n                target: this.$el,\n                progress: currentProgress,\n            },\n        });\n        window.dispatchEvent(customEvent);\n    }\n\n    /**\n     * Get modular modules that can listen the element's progress.\n     *\n     * @private\n     */\n    _getProgressModularModules() {\n        if (!this.modularInstance) {\n            return;\n        }\n\n        const modulesIdNames = Object.keys(this.$el.dataset).filter((key) =>\n            key.includes('module')\n        );\n        const modules: any[] = Object.entries(this.modularInstance.modules);\n\n        if (!modulesIdNames.length) {\n            return;\n        }\n\n        for (const modulesIdName of modulesIdNames) {\n            const moduleId = this.$el.dataset[modulesIdName];\n\n            if (!moduleId) {\n                return;\n            }\n\n            for (const module of modules) {\n                const [moduleName, moduleObj] = module;\n\n                if (moduleId in moduleObj) {\n                    this.progressModularModules.push({\n                        moduleName,\n                        moduleId,\n                    });\n                }\n            }\n        }\n    }\n\n    /**\n     * Function to get scroll call from.\n     *\n     * @private\n     */\n    _getScrollCallFrom(): scrollCallFrom {\n        const closestIntersectionValue = closestNumber(\n            [this.intersection.start, this.intersection.end],\n            this.currentScroll\n        );\n        return this.intersection.start === closestIntersectionValue\n            ? 'start'\n            : 'end';\n    }\n\n    /**\n     * Function to dispatch a custom event or call a modular callback.\n     *\n     * @private\n     *\n     * @param {scrollCallWay} way - Enter or leave.\n     * @param {scrollCallFrom} from - Start or end.\n     */\n    _dispatchCall(way: scrollCallWay, from: scrollCallFrom) {\n        const callParameters = this.attributes.scrollCall?.split(',');\n        const callSelf = this.attributes?.scrollCallSelf;\n\n        if (callParameters && callParameters.length > 1) {\n            // Using Modular.js (https://github.com/modularorg/modularjs)\n            const [func, moduleName, moduleId] = callParameters;\n            let targetModuleId;\n\n            // If the module is set on the scroll element\n            if (callSelf) {\n                targetModuleId = this.$el.dataset[`module${moduleName.trim()}`];\n            } else {\n                targetModuleId = moduleId;\n            }\n\n            this.modularInstance &&\n                this.modularInstance.call(\n                    func.trim(),\n                    {\n                        target: this.$el,\n                        way,\n                        from,\n                    },\n                    moduleName.trim(),\n                    targetModuleId?.trim()\n                );\n        } else if (callParameters) {\n            // Using CustomEvent API (https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent)\n            const [customEventName] = callParameters;\n            const customEvent = new CustomEvent(customEventName, {\n                detail: {\n                    target: this.$el,\n                    way,\n                    from,\n                },\n            });\n            window.dispatchEvent(customEvent);\n        }\n    }\n}\n","/**\n * Integrates Lenis with Locomotive's built-in animation system\n */\n\nimport {\n    CoreOptions,\n    IModular,\n    IScrollElementCallbacksValues,\n    scrollOrientation,\n} from '../types';\nimport IO from './IO';\nimport ScrollElement from './ScrollElement';\n\n/** Defined attributes that need a requestAnimationFrame */\nconst ATTRIBUTES_THAT_NEED_RAF = [\n    'scrollOffset',\n    'scrollPosition',\n    'scrollModuleProgress',\n    'scrollCssProgress',\n    'scrollEventProgress',\n    'scrollSpeed',\n];\n\n/** Default root margins */\nconst TRIGGER_ROOT_MARGIN = '-1px -1px -1px -1px';\nconst RAF_ROOT_MARGIN = '100% 100% 100% 100%'; // Add 100vh top/bottom && 100vw left/right to use a biggest value with data-scroll-speed\n\nexport default class Core {\n    private $scrollContainer!: HTMLElement;\n    private modularInstance?: IModular;\n    private triggerRootMargin!: string;\n    private rafRootMargin!: string;\n    private scrollElements!: ScrollElement[];\n    private triggeredScrollElements!: ScrollElement[];\n    private RAFScrollElements!: ScrollElement[];\n    private scrollElementsToUpdate!: ScrollElement[];\n    private IOTriggerInstance!: IO;\n    private IORafInstance!: IO;\n    private scrollOrientation!: scrollOrientation;\n\n    constructor({\n        $el,\n        modularInstance,\n        triggerRootMargin,\n        rafRootMargin,\n        scrollOrientation,\n    }: CoreOptions) {\n        if (!$el) {\n            console.error('Please provide a DOM Element as scrollContainer');\n            return;\n        }\n\n        // Scroll container\n        this.$scrollContainer = $el;\n\n        // Modular.js\n        this.modularInstance = modularInstance;\n\n        // Scroll Direction\n        this.scrollOrientation = scrollOrientation;\n\n        // IO Margins\n        this.triggerRootMargin = triggerRootMargin ?? TRIGGER_ROOT_MARGIN;\n        this.rafRootMargin = rafRootMargin ?? RAF_ROOT_MARGIN;\n\n        // ScrollElements arrays\n        this.scrollElements = [];\n        this.triggeredScrollElements = [];\n        this.RAFScrollElements = [];\n        this.scrollElementsToUpdate = [];\n\n\n        // Init\n        this._init();\n    }\n\n    /**\n     * Lifecyle - Initialize the core.\n     *\n     * @private\n     */\n    private _init() {\n        const $scrollElements =\n            this.$scrollContainer.querySelectorAll('[data-scroll]');\n\n        const $scrollElementsArr = Array.from($scrollElements) as HTMLElement[]\n        this._subscribeScrollElements($scrollElementsArr);\n\n        // Trigger IO\n        this.IOTriggerInstance = new IO({\n            scrollElements: [...this.triggeredScrollElements],\n            rootMargin: this.triggerRootMargin,\n            IORaf: false,\n        });\n\n        // Raf IO\n        this.IORafInstance = new IO({\n            scrollElements: [...this.RAFScrollElements],\n            rootMargin: this.rafRootMargin,\n            IORaf: true,\n        });\n    }\n\n    /**\n     * Lifecyle - Destroy core.\n     */\n    public destroy() {\n        this.IOTriggerInstance.destroy();\n        this.IORafInstance.destroy();\n        this._unsubscribeAllScrollElements();\n    }\n\n    /**\n     * Callback - Resize callback.\n     */\n    onResize({ currentScroll }: IScrollElementCallbacksValues) {\n        for (const scrollElement of this.RAFScrollElements) {\n            scrollElement.onResize({\n                currentScroll,\n            } as IScrollElementCallbacksValues);\n        }\n    }\n\n    /**\n     * Callback - RAF callback.\n     */\n    onRender({ currentScroll, smooth }: IScrollElementCallbacksValues) {\n        for (const scrollElement of this.scrollElementsToUpdate) {\n            scrollElement.onRender({\n                currentScroll,\n                smooth,\n            } as IScrollElementCallbacksValues);\n        }\n    }\n\n    /**\n     * Remove items from lists of scroll elements and compute all new values.\n     *\n     * @param {HTMLElement} $oldContainer - HTMLElement that contains data-scroll elements to unsubscribe\n     */\n    removeScrollElements($oldContainer: HTMLElement) {\n        const $scrollElementsToRemove =\n            $oldContainer.querySelectorAll('[data-scroll]');\n\n        if (!$scrollElementsToRemove.length) return;\n\n        // 1. Remove from IO\n        for (let index = 0; index < this.triggeredScrollElements.length; index++) {\n            const scrollElement = this.triggeredScrollElements[index];\n            const $scrollElementsToRemoveArr = Array.from($scrollElementsToRemove) as HTMLElement []\n            if ($scrollElementsToRemoveArr.indexOf(scrollElement.$el) > -1) {\n                this.IOTriggerInstance.unobserve(scrollElement.$el);\n                this.triggeredScrollElements.splice(index, 1);\n            }\n        }\n\n        for (let index = 0; index < this.RAFScrollElements.length; index++) {\n            const scrollElement = this.RAFScrollElements[index];\n            const $scrollElementsToRemoveArr = Array.from($scrollElementsToRemove) as HTMLElement []\n            if ($scrollElementsToRemoveArr.indexOf(scrollElement.$el) > -1) {\n                this.IORafInstance.unobserve(scrollElement.$el);\n                this.RAFScrollElements.splice(index, 1);\n            }\n        }\n\n        // 2. Remove from scrollElementsToUpdate[] and scrollElements[]\n        $scrollElementsToRemove.forEach(($scrollElement) => {\n            const targetScrollElementToUpdate =\n                this.scrollElementsToUpdate.find(\n                    (scrollElement) => scrollElement.$el === $scrollElement\n                );\n            const targetScrollElement = this.scrollElements.find(\n                (scrollElement) => scrollElement.$el === $scrollElement\n            );\n\n            if (targetScrollElementToUpdate) {\n                this._unsubscribeElementUpdate(targetScrollElementToUpdate);\n            }\n            if (targetScrollElement) {\n                this.scrollElements = this.scrollElements.filter(\n                    (scrollElementItem) =>\n                        scrollElementItem.id != targetScrollElement.id\n                );\n            }\n        });\n    }\n\n    /**\n     * Add items to lists of scroll elements and compute all new values.\n     *\n     * @param {HTMLElement} $newContainer - HTMLElement that contains data-scroll elements to subscribe\n     */\n    addScrollElements($newContainer: HTMLElement) {\n        // 3. Rebuild ScrollElements\n        const $scrollElements = $newContainer.querySelectorAll('[data-scroll]');\n\n        // 4. Get max scrollElement.id\n        const ids: number[] = [];\n        this.scrollElements.forEach((scrollElement) => {\n            ids.push(scrollElement.id);\n        });\n        const maxID = Math.max(...ids);\n        const fromIndex = maxID + 1;\n        const $scrollElementsArr = Array.from($scrollElements) as HTMLElement[]\n        this._subscribeScrollElements(\n            $scrollElementsArr,\n            fromIndex,\n            true\n        );\n    }\n\n    /**\n     * Create a ScrollElement instance for each elements with\n     * `data-scroll` attribute.\n     *\n     * @private\n     *\n     * @param {HTMLElement[]} $scrollElements - List of elements that need\n     *     to be regarded.\n     */\n    _subscribeScrollElements(\n        $scrollElements: HTMLElement[],\n        fromIndex = 0,\n        toObserve = false\n    ) {\n        // For each scroll element create a ScrollElement instance\n        for (let index = 0; index < $scrollElements.length; index++) {\n            const $scrollElement = $scrollElements[index];\n            const needRaf = this._checkRafNeeded($scrollElement);\n\n            const scrollElementInstance = new ScrollElement({\n                $el: $scrollElement,\n                id: fromIndex + index,\n                scrollOrientation: this.scrollOrientation,\n                modularInstance: this.modularInstance,\n                subscribeElementUpdateFn:\n                    this._subscribeElementUpdate.bind(this),\n                unsubscribeElementUpdateFn:\n                    this._unsubscribeElementUpdate.bind(this),\n                needRaf,\n            });\n\n            // Push to common array\n            this.scrollElements.push(scrollElementInstance);\n\n            // Push to specific array\n            if (needRaf) {\n                this.RAFScrollElements.push(scrollElementInstance);\n\n                // Dynamic observe item\n                if (toObserve) {\n                    this.IORafInstance.scrollElements.push(\n                        scrollElementInstance\n                    );\n                    this.IORafInstance.observe(scrollElementInstance.$el);\n                }\n            } else {\n                this.triggeredScrollElements.push(scrollElementInstance);\n\n                // Dynamic observe item\n                if (toObserve) {\n                    this.IOTriggerInstance.scrollElements.push(\n                        scrollElementInstance\n                    );\n                    this.IOTriggerInstance.observe(scrollElementInstance.$el);\n                }\n            }\n        }\n    }\n\n    /**\n     * Clear all ScrollElement arrays.\n     *\n     * @private\n     */\n    _unsubscribeAllScrollElements() {\n        this.scrollElements = [];\n        this.RAFScrollElements = [];\n        this.triggeredScrollElements = [];\n        this.scrollElementsToUpdate = [];\n    }\n\n    /**\n     * Subscribe ScrollElement instance that needs to be updated.\n     *\n     * @private\n     *\n     * @param {ScrollElement} scrollElement - ScrollElement instance inview\n     *     that needs to be updated.\n     */\n    _subscribeElementUpdate(scrollElement: ScrollElement) {\n        this.scrollElementsToUpdate.push(scrollElement);\n    }\n\n    /**\n     * Unscribe ScrollElement instance that doesn't need to be updated.\n     *\n     * @private\n     *\n     * @param {ScrollElement} scrollElement - The updated ScrollElement instance\n     *     out of view now.\n     */\n    _unsubscribeElementUpdate(scrollElement: ScrollElement) {\n        this.scrollElementsToUpdate = this.scrollElementsToUpdate.filter(\n            (scrollElementToUpdate) =>\n                scrollElementToUpdate.id != scrollElement.id\n        );\n    }\n\n    /**\n     * Check if a DOM Element need a requestAnimationFrame to be used.\n     *\n     * @private\n     *\n     * @param {HTMLElement} $scrollElement - The element that needs to be checked.\n     *\n     * @returns {boolean}\n     */\n    _checkRafNeeded($scrollElement: HTMLElement) {\n        let attributesThatNeedRaf = [...ATTRIBUTES_THAT_NEED_RAF];\n\n        // Remove utils\n        const removeAttribute = (attributeToRemove: string) => {\n            attributesThatNeedRaf = attributesThatNeedRaf.filter(\n                (attribute) => attribute != attributeToRemove\n            );\n        };\n\n        // 1. Check scroll offset values\n        if ($scrollElement.dataset.scrollOffset) {\n            const value = $scrollElement.dataset.scrollOffset\n                .split(',')\n                .map((test) => test.replace('%', '').trim())\n                .join(',');\n            if (value != '0,0') {\n                return true;\n            } else {\n                removeAttribute('scrollOffset');\n            }\n        } else {\n            removeAttribute('scrollOffset');\n        }\n\n        // 2. Check scroll position values\n        if ($scrollElement.dataset.scrollPosition) {\n            const value = $scrollElement.dataset.scrollPosition.trim();\n            if (value != 'top,bottom') {\n                return true;\n            } else {\n                removeAttribute('scrollPosition');\n            }\n        } else {\n            removeAttribute('scrollPosition');\n        }\n\n        // 3. Check scroll speed values\n        if (\n            $scrollElement.dataset.scrollSpeed &&\n            !isNaN(parseFloat($scrollElement.dataset.scrollSpeed))\n        ) {\n            return true;\n        } else {\n            removeAttribute('scrollSpeed');\n        }\n\n        // 4. Check others attributes\n        for (const attribute of attributesThatNeedRaf) {\n            if (attribute in $scrollElement.dataset) {\n                return true;\n            }\n        }\n\n        return false;\n    }\n}\n","/**\n * Resize Observer\n *\n * The Resize Observer API provides a performant mechanism by which code can monitor an element for changes to its size,\n * with notifications being delivered to the observer each time the size changes.\n *\n * Features functions to:\n *\n * - Trigger the resize callback if the specified element's size change.\n *\n * References:\n *\n * - {@link https://developer.mozilla.org/en-US/docs/Web/API/Resize_Observer_API}\n */\n\nimport { IROOptions } from '../types';\n\nexport default class RO {\n    private $resizeElements: HTMLElement[];\n    private isFirstObserve: boolean;\n    private observer!: ResizeObserver;\n    private resizeCallback: () => void;\n\n    constructor({ resizeElements, resizeCallback = () => {} }: IROOptions) {\n        // Parameters\n        this.$resizeElements = resizeElements;\n        this.resizeCallback = resizeCallback;\n\n        // Flags\n        this.isFirstObserve = true;\n\n        // Init\n        this._init();\n    }\n\n    /**\n     * Lifecyle - Initialize Resize Observer.\n     *\n     * @private\n     */\n    private _init() {\n        // Callback\n        const onResize = (entries: ResizeObserverEntry[]) => {\n            !this.isFirstObserve && this.resizeCallback?.();\n            this.isFirstObserve = false;\n        };\n\n        // Instance\n        this.observer = new ResizeObserver(onResize);\n\n        // Observe each default elements\n        for (const $resizeElement of this.$resizeElements) {\n            this.observer.observe($resizeElement);\n        }\n    }\n\n    /**\n     * Lifecyle - Destroy Resize Observer.\n     */\n    public destroy() {\n        this.observer.disconnect();\n    }\n}\n","//@ts-ignore\nimport Lenis from '@studio-freight/lenis';\nimport Core from './core/Core';\nimport RO from './core/RO';\nimport {\n    ILenisOptions,\n    ILenisScrollToOptions,\n    ILenisScrollValues,\n    ILocomotiveScrollOptions,\n    IModular,\n    lenisTargetScrollTo,\n} from './types';\n\n/**\n * @type {ILenisOptions}\n */\nconst defaultLenisOptions: ILenisOptions = {\n    wrapper: window,\n    content: document.documentElement,\n    lerp: 0.1,\n    duration: 1.2,\n    orientation: 'vertical',\n    gestureOrientation: 'vertical',\n    smoothWheel: true,\n    smoothTouch: false,\n    wheelMultiplier: 1,\n    touchMultiplier: 2,\n    normalizeWheel: true,\n    easing: (t) => Math.min(1, 1.001 - Math.pow(2, -10 * t)), // https://www.desmos.com/calculator/brs54l4xou\n};\n\n/**\n * Locomotive Scroll\n *\n * Detection of elements in viewport & smooth scrolling with parallax.\n *\n * Inspired by\n * {@link https://github.com/locomotivemtl/locomotive-scroll locomotive-scroll.js}\n * and built around\n * {@link https://github.com/studio-freight/lenis lenis.js}.\n */\n\nexport default class LocomotiveScroll {\n    public rafPlaying: boolean;\n\n    private lenisInstance: any;\n    private coreInstance: any;\n\n    private lenisOptions: ILenisOptions;\n    private modularInstance?: IModular;\n    private triggerRootMargin?: string;\n    private rafRootMargin?: string;\n    private rafInstance?: any;\n    private autoResize?: boolean;\n    private autoStart?: boolean;\n    private ROInstance?: RO;\n    private scrollCallback?(scrollValues: ILenisScrollValues): void;\n    private initCustomTicker?: (render: () => void) => void;\n    private destroyCustomTicker?: (render: () => void) => void;\n    private _onRenderBind: () => void;\n    private _onResizeBind: () => void;\n    private _onScrollToBind: (event: MouseEvent) => void;\n\n    constructor({\n        lenisOptions = {},\n        modularInstance,\n        triggerRootMargin,\n        rafRootMargin,\n        autoResize = true,\n        autoStart = true,\n        scrollCallback = () => {},\n        initCustomTicker,\n        destroyCustomTicker,\n    }: ILocomotiveScrollOptions = {}) {\n        // Arguments\n        this.lenisOptions = { ...defaultLenisOptions, ...lenisOptions };\n\n        Object.assign(this, {\n            lenisOptions,\n            modularInstance,\n            triggerRootMargin,\n            rafRootMargin,\n            autoResize,\n            autoStart,\n            scrollCallback,\n            initCustomTicker,\n            destroyCustomTicker,\n        });\n\n        // Binding\n        this._onRenderBind = this._onRender.bind(this);\n        this._onScrollToBind = this._onScrollTo.bind(this);\n        this._onResizeBind = this._onResize.bind(this);\n\n        // Data\n        this.rafPlaying = false;\n\n        // Init\n        this._init();\n    }\n\n    /**\n     * Lifecyle - Initialize instance.\n     *\n     * @private\n     */\n    private _init(): void {\n        // Create Lenis instance\n        this.lenisInstance = new Lenis({\n            wrapper: this.lenisOptions.wrapper,\n            content: this.lenisOptions.content,\n            lerp: this.lenisOptions.lerp,\n            duration: this.lenisOptions.duration,\n            orientation: this.lenisOptions.orientation,\n            gestureOrientation: this.lenisOptions.gestureOrientation,\n            smoothWheel: this.lenisOptions.smoothWheel,\n            smoothTouch: this.lenisOptions.smoothTouch,\n            wheelMultiplier: this.lenisOptions.wheelMultiplier,\n            touchMultiplier: this.lenisOptions.touchMultiplier,\n            normalizeWheel: this.lenisOptions.normalizeWheel,\n            easing: this.lenisOptions.easing,\n        });\n        this.lenisInstance?.on('scroll', this.scrollCallback);\n\n        // Add scroll direction attribute on body\n        document.documentElement.setAttribute(\n            'data-scroll-orientation',\n            this.lenisInstance.options.orientation\n        );\n\n        requestAnimationFrame(() => {\n            // Create Core Instance\n            this.coreInstance = new Core({\n                $el: this.lenisInstance.rootElement,\n                modularInstance: this.modularInstance,\n                triggerRootMargin: this.triggerRootMargin,\n                rafRootMargin: this.rafRootMargin,\n                scrollOrientation: this.lenisInstance.options.orientation,\n            });\n\n            // Bind Events\n            this._bindEvents();\n\n            // RAF warning\n            if (this.initCustomTicker && !this.destroyCustomTicker) {\n                console.warn(\n                    'initCustomTicker callback is declared, but destroyCustomTicker is not. Please pay attention. It could cause trouble.'\n                );\n            } else if (!this.initCustomTicker && this.destroyCustomTicker) {\n                console.warn(\n                    'destroyCustomTicker callback is declared, but initCustomTicker is not. Please pay attention. It could cause trouble.'\n                );\n            }\n\n            // Start RAF\n            this.autoStart && this.start();\n        });\n    }\n\n    /**\n     * Lifecyle - Destroy instance.\n     */\n    public destroy(): void {\n        // Stop raf\n        this.stop();\n        // Unbind Events\n        this._unbindEvents();\n        // Destroy Lenis\n        this.lenisInstance.destroy();\n        // Destroy Core\n        this.coreInstance.destroy();\n    }\n\n    /**\n     * Events - Subscribe events to listen.\n     */\n    private _bindEvents() {\n        this._bindScrollToEvents();\n\n        if (this.autoResize) {\n            if ('ResizeObserver' in window) {\n                this.ROInstance = new RO({\n                    resizeElements: [document.body],\n                    resizeCallback: this._onResizeBind,\n                });\n            } else {\n                (window as any).addEventListener('resize', this._onResizeBind);\n            }\n        }\n    }\n\n    /**\n     * Events - Unsubscribe listened events.\n     */\n    private _unbindEvents() {\n        this._unbindScrollToEvents();\n\n        if (this.autoResize) {\n            if ('ResizeObserver' in window) {\n                this.ROInstance && this.ROInstance.destroy();\n            } else {\n                (window as any).removeEventListener(\n                    'resize',\n                    this._onResizeBind\n                );\n            }\n        }\n    }\n\n    /**\n     * Events - Subscribe scrollTo events to listen.\n     */\n    private _bindScrollToEvents($container?: HTMLElement) {\n        const $rootContainer = $container\n            ? $container\n            : this.lenisInstance.rootElement;\n        const $scrollToElements =\n            $rootContainer?.querySelectorAll('[data-scroll-to]');\n\n        $scrollToElements?.length &&\n            $scrollToElements.forEach(($el: HTMLElement): void => {\n                $el.addEventListener('click', this._onScrollToBind, false);\n            });\n    }\n\n    /**\n     * Events - Unsubscribe scrollTo listened events.\n     */\n    private _unbindScrollToEvents($container?: HTMLElement) {\n        const $rootContainer = $container\n            ? $container\n            : this.lenisInstance.rootElement;\n        const $scrollToElements =\n            $rootContainer?.querySelectorAll('[data-scroll-to]');\n        $scrollToElements?.length &&\n            $scrollToElements.forEach(($el: HTMLElement) => {\n                $el.removeEventListener('click', this._onScrollToBind, false);\n            });\n    }\n\n    /**\n     * Callback - Resize callback.\n     */\n    private _onResize() {\n        // Waiting the next frame to get the new current scroll value return by Lenis\n        requestAnimationFrame(() => {\n            this.coreInstance?.onResize({\n                currentScroll: this.lenisInstance.scroll,\n            });\n        });\n    }\n\n    /**\n     * Callback - Render callback.\n     */\n    private _onRender() {\n        this.lenisInstance?.raf(Date.now());\n\n        this.coreInstance?.onRender({\n            currentScroll: this.lenisInstance.scroll,\n            smooth: this.lenisInstance.isSmooth,\n        });\n    }\n\n    /**\n     * Callback - Scroll To callback.\n     */\n    private _onScrollTo(event: MouseEvent) {\n        event.preventDefault();\n        const $target = (event.currentTarget as HTMLElement) ?? null;\n        if (!$target) return;\n        const target =\n            $target.getAttribute('data-scroll-to-href') ||\n            $target.getAttribute('href');\n        const offset = $target.getAttribute('data-scroll-to-offset') || 0;\n        const duration =\n            $target.getAttribute('data-scroll-to-duration') ||\n            this.lenisOptions.duration ||\n            defaultLenisOptions.duration;\n\n        target &&\n            this.scrollTo(target, {\n                offset: typeof offset === 'string' ? parseInt(offset) : offset,\n                duration:\n                    typeof duration === 'string'\n                        ? parseInt(duration)\n                        : duration,\n            });\n    }\n\n    /**\n     * Start RequestAnimationFrame that active Lenis smooth and scroll progress.\n     */\n    public start(): void {\n        if (this.rafPlaying) {\n            return;\n        }\n\n        this.rafPlaying = true;\n        this.initCustomTicker\n            ? this.initCustomTicker(this._onRenderBind)\n            : this._raf();\n    }\n\n    /**\n     * Stop RequestAnimationFrame that active Lenis smooth and scroll progress.\n     */\n    public stop(): void {\n        if (!this.rafPlaying) {\n            return;\n        }\n\n        this.rafPlaying = false;\n        this.destroyCustomTicker\n            ? this.destroyCustomTicker(this._onRenderBind)\n            : this.rafInstance && cancelAnimationFrame(this.rafInstance);\n    }\n\n    /**\n     * Remove old scroll elements items and rebuild ScrollElements instances.\n     */\n    public removeScrollElements($oldContainer: HTMLElement): void {\n        if (!$oldContainer) {\n            console.error('Please provide a DOM Element as $oldContainer');\n            return;\n        }\n\n        this._unbindScrollToEvents($oldContainer);\n        this.coreInstance?.removeScrollElements($oldContainer);\n    }\n\n    /**\n     * Add new scroll elements items and rebuild ScrollElements instances.\n     */\n    public addScrollElements($newContainer: HTMLElement): void {\n        if (!$newContainer) {\n            console.error('Please provide a DOM Element as $newContainer');\n            return;\n        }\n\n        this.coreInstance?.addScrollElements($newContainer);\n        requestAnimationFrame(() => {\n            this._bindScrollToEvents($newContainer);\n        });\n    }\n\n    /**\n     * Trigger resize callback.\n     */\n    public resize(): void {\n        this._onResizeBind();\n    }\n\n    /**\n     * Trigger scroll to callback.\n     */\n    public scrollTo(\n        target: lenisTargetScrollTo,\n        options?: ILenisScrollToOptions\n    ): void {\n        this.lenisInstance?.scrollTo(target, {\n            offset: options?.offset,\n            lerp: options?.lerp,\n            duration: options?.duration,\n            immediate: options?.immediate,\n            lock: options?.lock,\n            force: options?.force,\n            easing: options?.easing,\n            onComplete: options?.onComplete,\n        });\n    }\n\n    /**\n     * RequestAnimationFrame that active Lenis smooth and scroll progress.\n     *\n     * @private\n     *\n     */\n    private _raf() {\n        this._onRenderBind();\n        this.rafInstance = requestAnimationFrame(() => this._raf());\n    }\n}\n"],"names":["e","t","i","Math","max","min","_classCallCheck","_createClass","key","value","this","isRunning","o","s","lerp","to","round","currentTime","duration","easing","from","onUpdate","call","completed","stop","_ref","_ref$lerp","_ref$duration","_ref$easing","n","arguments","clearTimeout","setTimeout","apply","_this","onWindowResize","width","window","innerWidth","height","innerHeight","onWrapperResize","wrapper","clientWidth","clientHeight","onContentResize","document","documentElement","scrollHeight","scrollWidth","content","addEventListener","wrapperResizeObserver","ResizeObserver","observe","contentResizeObserver","removeEventListener","disconnect","get","x","y","events","emit","_len","length","Array","_key","on","_this2","push","filter","r","_ref2","_this3","_ref2$wheelMultiplier","wheelMultiplier","_ref2$touchMultiplier","touchMultiplier","_ref2$normalizeWheel","normalizeWheel","onTouchStart","_ref3","targetTouches","clientX","clientY","touchStart","lastDelta","onTouchMove","_ref4","emitter","type","deltaX","deltaY","event","onTouchEnd","inertia","onWheel","element","passive","l","_this4","_ref5","undefined","direction","gestureDirection","mouseMultiplier","h","smooth","_ref5$wrapper","a","_ref5$content","c","_ref5$wheelEventsTarg","wheelEventsTarget","u","_ref5$smoothWheel","smoothWheel","p","_ref5$smoothTouch","smoothTouch","d","_ref5$syncTouch","syncTouch","m","_ref5$syncTouchLerp","syncTouchLerp","v","_ref5$touchInertiaMul","touchInertiaMultiplier","g","S","_ref5$easing","w","pow","_ref5$lerp","f","_ref5$infinite","infinite","_ref5$orientation","orientation","T","_ref5$gestureOrientat","gestureOrientation","z","_ref5$touchMultiplier","M","_ref5$wheelMultiplier","E","_ref5$normalizeWheel","L","onVirtualScroll","_ref6","ctrlKey","options","scroll","composedPath","find","hasAttribute","isStopped","isLocked","preventDefault","isSmooth","isScrolling","animate","abs","velocity","scrollTo","targetScroll","programmatic","onScroll","animatedScroll","actualScroll","sign","console","warn","lenisVersion","body","dimensions","rootElement","classList","add","virtualScroll","destroy","isHorizontal","scrollLeft","scrollTop","reset","time","advance","_this5","_ref7","_ref7$offset","offset","_ref7$immediate","immediate","_ref7$lock","lock","_ref7$duration","_ref7$easing","_ref7$lerp","_ref7$onComplete","onComplete","_ref7$force","force","_ref7$programmatic","includes","limit","querySelector","nodeType","getBoundingClientRect","left","top","setScroll","fromTo","_ref8","requestAnimationFrame","__isSmooth","set","toggle","__isScrolling","__isStopped","IO","scrollElements","_ref$rootMargin","rootMargin","IORaf","observer","_init","observerOptions","IntersectionObserver","entries","forEach","entry","$targetItem","item","$el","target","isIntersecting","isAlreadyIntersected","_setInview","_setOutOfView","_step","_iterator","_createForOfIteratorHelper","done","$scrollElement","err","unobserve","scrollElement","setInteractivityOn","setInview","setInteractivityOff","setOutOfView","attributes","scrollRepeat","mapRange","inMin","inMax","outMin","outMax","closestNumber","array","reduce","prev","curr","ScrollElement","_this$$el$dataset$scr","_this$$el$dataset$scr2","_this$$el$dataset$scr3","_this$$el$dataset$scr4","_this$$el$dataset$scr5","id","modularInstance","subscribeElementUpdateFn","unsubscribeElementUpdateFn","needRaf","scrollOrientation","intersection","metrics","currentScroll","translateValue","progress","lastProgress","progressModularModules","isInview","isInteractive","isInFold","isFirstResize","scrollClass","dataset","scrollOffset","scrollPosition","scrollModuleProgress","scrollCssProgress","scrollEventProgress","scrollSpeed","parseFloat","scrollCall","scrollCallSelf","scrollIgnoreFold","scrollEnableTouchSpeed","start","end","offsetStart","offsetEnd","bcr","scrollY","scrollX","_getProgressModularModules","_resize","wSize","_computeProgress","isNaN","style","transform","concat","_getScrollCallFrom","_dispatchCall","remove","_computeMetrics","_computeIntersection","_this$metrics$bcr","metricsStart","metricsSize","split","trim","scrollPositionStart","scrollPositionEnd","viewportStart","parseInt","replace","viewportEnd","forcedProgress","clamp","_setCssProgress","_setCustomEventProgress","_step2","_iterator2","modularModules","moduleName","moduleId","currentProgress","setProperty","toString","customEventName","customEvent","CustomEvent","detail","dispatchEvent","modulesIdNames","Object","keys","modules","_step3","_iterator3","modulesIdName","_step4","_iterator4","module","_module","_slicedToArray","closestIntersectionValue","way","_this$attributes$scro","_this$attributes","callParameters","callSelf","_targetModuleId","targetModuleId","_callParameters","func","ATTRIBUTES_THAT_NEED_RAF","Core","triggerRootMargin","rafRootMargin","$scrollContainer","triggeredScrollElements","RAFScrollElements","scrollElementsToUpdate","IOTriggerInstance","IORafInstance","error","$scrollElements","querySelectorAll","$scrollElementsArr","_subscribeScrollElements","_toConsumableArray","_unsubscribeAllScrollElements","_step5","_iterator5","onResize","_step6","_iterator6","onRender","$oldContainer","$scrollElementsToRemove","index","indexOf","splice","targetScrollElementToUpdate","targetScrollElement","_unsubscribeElementUpdate","scrollElementItem","$newContainer","ids","fromIndex","toObserve","_checkRafNeeded","scrollElementInstance","_subscribeElementUpdate","bind","scrollElementToUpdate","attributesThatNeedRaf","removeAttribute","attributeToRemove","attribute","map","test","join","_step7","_iterator7","RO","resizeElements","_ref8$resizeCallback","resizeCallback","$resizeElements","isFirstObserve","_this$resizeCallback","_step8","_iterator8","$resizeElement","defaultLenisOptions","LocomotiveScroll","_ref9","_ref9$lenisOptions","lenisOptions","_ref9$autoResize","autoResize","_ref9$autoStart","autoStart","_ref9$scrollCallback","scrollCallback","initCustomTicker","destroyCustomTicker","rafPlaying","lenisInstance","coreInstance","rafInstance","ROInstance","_onRenderBind","_onResizeBind","_onScrollToBind","_extends","assign","_onRender","_onScrollTo","_onResize","_this$lenisInstance","Lenis","setAttribute","_bindEvents","_unbindEvents","_bindScrollToEvents","_unbindScrollToEvents","$container","$rootContainer","$scrollToElements","_this6","_this7","_this$coreInstance","_this$lenisInstance2","_this$coreInstance2","raf","Date","now","_event$currentTarget","$target","currentTarget","getAttribute","_raf","cancelAnimationFrame","_this$coreInstance3","removeScrollElements","_this$coreInstance4","_this8","addScrollElements","_this$lenisInstance3","_this9"],"sourceRoot":""}